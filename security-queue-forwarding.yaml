AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to create EventBridge rules for GuardDuty findings, CloudTrail events, Security Hub findings, and security-sensitive API activity with cross-account SQS as target'

Parameters:
  TargetAccountId:
    Type: String
    Description: AWS account ID where the target SQS queue resides
    
  TargetQueueArn:
    Type: String
    Description: ARN of the target SQS queue in the different account

Resources:
  EventBridgeToSQSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: EventBridgeToSQSPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource: !Ref TargetQueueArn

  GuardDutyFindingsRule:
    Type: AWS::Events::Rule
    Properties:
      Name: guard-duty-findings-rule
      Description: 'Rule to capture GuardDuty findings'
      EventPattern:
        source:
          - aws.guardduty
        detail-type:
          - GuardDuty Finding
      State: ENABLED
      Targets:
        - Id: SecurityEventQueueTarget
          Arn: !Ref TargetQueueArn
          RoleArn: !GetAtt EventBridgeToSQSRole.Arn

  CloudTrailWriteEventsRule:
    Type: AWS::Events::Rule
    Properties:
      Name: cloudtrail-write-events-rule
      Description: 'Rule to capture CloudTrail write API calls'
      EventPattern:
        source:
          - aws.cloudtrail
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          readOnly:
            - false
      State: ENABLED
      Targets:
        - Id: SecurityEventQueueTarget
          Arn: !Ref TargetQueueArn
          RoleArn: !GetAtt EventBridgeToSQSRole.Arn

  SecurityHubConfigFindingsRule:
    Type: AWS::Events::Rule
    Properties:
      Name: securityhub-config-findings-rule
      Description: 'Rule to capture Security Hub findings from AWS Config'
      EventPattern:
        source:
          - aws.securityhub
        detail-type:
          - Security Hub Findings - Imported
        detail:
          findings:
            ProductFields:
              aws/securityhub/ProductName:
                - Config
      State: ENABLED
      Targets:
        - Id: SecurityEventQueueTarget
          Arn: !Ref TargetQueueArn
          RoleArn: !GetAtt EventBridgeToSQSRole.Arn

  SecurityGroupChangeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: security-group-change-rule
      Description: 'Rule for EC2 Security Group changes'
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventName:
            - AuthorizeSecurityGroupIngress
            - AuthorizeSecurityGroupEgress
            - RevokeSecurityGroupIngress
            - RevokeSecurityGroupEgress
            - CreateSecurityGroup
            - DeleteSecurityGroup
      State: ENABLED
      Targets:
        - Id: SecurityEventQueueTarget
          Arn: !Ref TargetQueueArn
          RoleArn: !GetAtt EventBridgeToSQSRole.Arn

  FailedConsoleLoginRule:
    Type: AWS::Events::Rule
    Properties:
      Name: failed-console-login-rule
      Description: 'Rule for failed AWS Console login attempts'
      EventPattern:
        source:
          - aws.signin
        detail-type:
          - AWS Console Sign In via CloudTrail
        detail:
          eventName:
            - ConsoleLogin
          errorMessage:
            - Failed authentication
      State: ENABLED
      Targets:
        - Id: SecurityEventQueueTarget
          Arn: !Ref TargetQueueArn
          RoleArn: !GetAtt EventBridgeToSQSRole.Arn

  IAMPolicyChangeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: iam-policy-change-rule
      Description: 'Rule for IAM policy changes'
      EventPattern:
        source:
          - aws.iam
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventName:
            - DeleteGroupPolicy
            - DeleteRolePolicy
            - DeleteUserPolicy
            - PutGroupPolicy
            - PutRolePolicy
            - PutUserPolicy
            - CreatePolicy
            - DeletePolicy
            - CreatePolicyVersion
            - DeletePolicyVersion
            - AttachRolePolicy
            - DetachRolePolicy
            - AttachUserPolicy
            - DetachUserPolicy
            - AttachGroupPolicy
            - DetachGroupPolicy
      State: ENABLED
      Targets:
        - Id: SecurityEventQueueTarget
          Arn: !Ref TargetQueueArn
          RoleArn: !GetAtt EventBridgeToSQSRole.Arn

Outputs:
  EventBridgeToSQSRoleARN:
    Description: ARN of the IAM role for EventBridge to SQS access
    Value: !GetAtt EventBridgeToSQSRole.Arn
  GuardDutyFindingsRuleARN:
    Description: ARN of the EventBridge rule for GuardDuty findings
    Value: !GetAtt GuardDutyFindingsRule.Arn
  CloudTrailWriteEventsRuleARN:
    Description: ARN of the EventBridge rule for CloudTrail write events
    Value: !GetAtt CloudTrailWriteEventsRule.Arn
  SecurityHubConfigFindingsRuleARN:
    Description: ARN of the EventBridge rule for Security Hub Config findings
    Value: !GetAtt SecurityHubConfigFindingsRule.Arn
  SecurityGroupChangeRuleARN:
    Description: ARN of the EventBridge rule for security group modifications
    Value: !GetAtt SecurityGroupChangeRule.Arn
  FailedConsoleLoginRuleARN:
    Description: ARN of the EventBridge rule for failed console logins
    Value: !GetAtt FailedConsoleLoginRule.Arn
  IAMPolicyChangeRuleARN:
    Description: ARN of the EventBridge rule for IAM policy modifications
    Value: !GetAtt IAMPolicyChangeRule.Arn
